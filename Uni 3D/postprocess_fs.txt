#version 410 core
out vec4 FragColor;
  
in vec2 uv;

uniform sampler2D screenTexture;

// 4x4 Bayer matrix normalized to [0, 1]
const mat4 bayerMatrix = mat4(
    0.0,   0.5,   0.125,  0.625,
    0.75,  0.25,  0.875,  0.375,
    0.1875,0.6875,0.0625, 0.5625,
    0.9375,0.4375,0.8125, 0.3125
);

const mat4 bayerMatrix2 = mat4(
    0.5, 0.1, 0.1, 0.5,
    0.1, 0.5, 0.5, 0.1,
    0.1, 0.5, 0.5, 0.1,
    0.5, 0.1, 0.1, 0.5
);

void main()
{ 
    vec3 color = texture(screenTexture, uv).rgb;

    int x = int(mod(gl_FragCoord.x, 4.0)); // Horizontal position in Bayer matrix
    int y = int(mod(gl_FragCoord.y, 4.0)); // Vertical position in Bayer matrix

    // Threshold the pixel intensity based on the Bayer matrix
    float threshold = bayerMatrix[y][x];
    float ditheredValue = color.r > threshold ? 1.0 : 0.0;
    //float ditheredValue = threshold;
    FragColor = vec4(vec3(ditheredValue) * color, 1.0); // White or black only
    //FragColor = vec4(vec3(ditheredValue), 1.0); // White or black only

    //FragColor = texture(screenTexture, uv);
}